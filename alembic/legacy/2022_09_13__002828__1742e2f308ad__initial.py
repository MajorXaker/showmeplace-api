"""initial

Revision ID: 1742e2f308ad
Revises: 
Create Date: 2022-09-13 00:28:28.728839

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "1742e2f308ad"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_category")),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("has_onboarded", sa.Boolean(), server_default="FALSE", nullable=True),
        sa.Column("level", sa.Integer(), nullable=True),
        sa.Column("coins", sa.Integer(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("cognito_user_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
    )
    op.create_table(
        "category_image",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("s3_filename", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_category_image_user_id_user"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_category_image")),
    )
    op.create_table(
        "m2m_user_user_following_user",
        sa.Column("follower_id", sa.Integer(), nullable=False),
        sa.Column("lead_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["follower_id"],
            ["user.id"],
            name=op.f("fk_m2m_user_user_following_user_follower_id_user"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["lead_id"],
            ["user.id"],
            name=op.f("fk_m2m_user_user_following_user_lead_id_user"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "lead_id", "follower_id", name="m2m_user_following_user"
        ),
    )
    op.create_table(
        "place",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("coordinate_longitude", sa.Float(), nullable=False),
        sa.Column("coordinate_latitude", sa.Float(), nullable=False),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column(
            "is_secret_place", sa.Boolean(), server_default="FALSE", nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
            name=op.f("fk_place_category_id_category"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_place")),
    )
    op.create_table(
        "user_image",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("s3_filename", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_user_image_user_id_user"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_image")),
    )
    op.create_table(
        "m2m_user_opened_secret_place",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("place_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["place.id"],
            name=op.f("fk_m2m_user_opened_secret_place_place_id_place"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_m2m_user_opened_secret_place_user_id_user"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "place_id", name="m2m_user_secret_place_pkey"
        ),
    )
    op.create_table(
        "m2m_user_place_favourite",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("place_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["place.id"],
            name=op.f("fk_m2m_user_place_favourite_place_id_place"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_m2m_user_place_favourite_user_id_user"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "place_id", name="m2m_user_place_favourite_pkey"
        ),
    )
    op.create_table(
        "m2m_user_place_marked",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("place_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["place.id"],
            name=op.f("fk_m2m_user_place_marked_place_id_place"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_m2m_user_place_marked_user_id_user"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "place_id", name="m2m_user_place_ownership_pkey"
        ),
    )
    op.create_table(
        "m2m_user_place_visited",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("place_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["place.id"],
            name=op.f("fk_m2m_user_place_visited_place_id_place"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name=op.f("fk_m2m_user_place_visited_user_id_user"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "place_id", name="m2m_user_place_visited_pkey"
        ),
    )
    op.create_table(
        "place_image",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("place_id", sa.Integer(), nullable=True),
        sa.Column("s3_filename", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["place.id"],
            name=op.f("fk_place_image_place_id_place"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_place_image")),
    )
    op.create_table(
        "secret_extras",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("food_suggestion", sa.Text(), nullable=True),
        sa.Column("time_suggestion", sa.Text(), nullable=True),
        sa.Column("company_suggestion", sa.Text(), nullable=True),
        sa.Column("music_suggestion", sa.Text(), nullable=True),
        sa.Column("extra_suggestion", sa.Text(), nullable=True),
        sa.Column("place_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["place_id"],
            ["place.id"],
            name=op.f("fk_secret_extras_place_id_place"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_secret_extras")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("secret_extras")
    op.drop_table("place_image")
    op.drop_table("m2m_user_place_visited")
    op.drop_table("m2m_user_place_marked")
    op.drop_table("m2m_user_place_favourite")
    op.drop_table("m2m_user_opened_secret_place")
    op.drop_table("user_image")
    op.drop_table("place")
    op.drop_table("m2m_user_user_following_user")
    op.drop_table("category_image")
    op.drop_table("user")
    op.drop_table("category")
    # ### end Alembic commands ###
