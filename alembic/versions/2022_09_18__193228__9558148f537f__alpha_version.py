"""alpha_version

Revision ID: 9558148f537f
Revises: 01ec8d488b14
Create Date: 2022-09-18 19:32:28.446431

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9558148f537f'
down_revision = '01ec8d488b14'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actions_economy',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('action_name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('change_type', sa.String(), nullable=False),
    sa.Column('change_amount', sa.Integer(), server_default='0', nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_actions_economy'))
    )
    op.create_index(op.f('ix_actions_economy_record_modified'), 'actions_economy', ['record_modified'], unique=False)
    op.create_table('category',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category'))
    )
    op.create_index(op.f('ix_category_record_modified'), 'category', ['record_modified'], unique=False)
    op.create_table('user',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('has_onboarded', sa.Boolean(), server_default='FALSE', nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('coins', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('external_id', sa.Text(), nullable=False),
    sa.Column('external_id_type', sa.Text(), server_default='COGNITO', nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_record_modified'), 'user', ['record_modified'], unique=False)
    op.create_table('category_image',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('s3_filename', sa.Text(), nullable=True),
    sa.Column('s3_path', sa.Text(), nullable=True),
    sa.Column('presigned_url', sa.Text(), nullable=True),
    sa.Column('presigned_url_due', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_category_image_category_id_category'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category_image'))
    )
    op.create_index(op.f('ix_category_image_record_modified'), 'category_image', ['record_modified'], unique=False)
    op.create_table('m2m_user_user_following_user',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], name=op.f('fk_m2m_user_user_following_user_follower_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lead_id'], ['user.id'], name=op.f('fk_m2m_user_user_following_user_lead_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('lead_id', 'follower_id', name='m2m_user_following_user')
    )
    op.create_index(op.f('ix_m2m_user_user_following_user_record_modified'), 'm2m_user_user_following_user', ['record_modified'], unique=False)
    op.create_table('place',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('coordinate_longitude', sa.Float(), nullable=False),
    sa.Column('coordinate_latitude', sa.Float(), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('is_secret_place', sa.Boolean(), server_default='FALSE', nullable=True),
    sa.Column('active_due_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_place_category_id_category'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_place'))
    )
    op.create_index(op.f('ix_place_category_id'), 'place', ['category_id'], unique=False)
    op.create_index(op.f('ix_place_record_modified'), 'place', ['record_modified'], unique=False)
    op.create_table('user_image',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('s3_filename', sa.Text(), nullable=True),
    sa.Column('s3_path', sa.Text(), nullable=True),
    sa.Column('presigned_url', sa.Text(), nullable=True),
    sa.Column('presigned_url_due', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_image_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_image'))
    )
    op.create_index(op.f('ix_user_image_record_modified'), 'user_image', ['record_modified'], unique=False)
    op.create_table('m2m_user_opened_secret_place',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['place_id'], ['place.id'], name=op.f('fk_m2m_user_opened_secret_place_place_id_place'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_m2m_user_opened_secret_place_user_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'place_id', name='m2m_user_secret_place_pkey')
    )
    op.create_index(op.f('ix_m2m_user_opened_secret_place_record_modified'), 'm2m_user_opened_secret_place', ['record_modified'], unique=False)
    op.create_table('m2m_user_place_favourite',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['place_id'], ['place.id'], name=op.f('fk_m2m_user_place_favourite_place_id_place'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_m2m_user_place_favourite_user_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'place_id', name='m2m_user_place_favourite_pkey')
    )
    op.create_index(op.f('ix_m2m_user_place_favourite_record_modified'), 'm2m_user_place_favourite', ['record_modified'], unique=False)
    op.create_table('m2m_user_place_marked',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['place_id'], ['place.id'], name=op.f('fk_m2m_user_place_marked_place_id_place'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_m2m_user_place_marked_user_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'place_id', name='m2m_user_place_ownership_pkey')
    )
    op.create_index(op.f('ix_m2m_user_place_marked_record_modified'), 'm2m_user_place_marked', ['record_modified'], unique=False)
    op.create_table('m2m_user_place_visited',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['place_id'], ['place.id'], name=op.f('fk_m2m_user_place_visited_place_id_place'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_m2m_user_place_visited_user_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'place_id', name='m2m_user_place_visited_pkey')
    )
    op.create_index(op.f('ix_m2m_user_place_visited_record_modified'), 'm2m_user_place_visited', ['record_modified'], unique=False)
    op.create_table('place_image',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('s3_filename', sa.Text(), nullable=True),
    sa.Column('s3_path', sa.Text(), nullable=True),
    sa.Column('presigned_url', sa.Text(), nullable=True),
    sa.Column('presigned_url_due', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('place_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['place.id'], name=op.f('fk_place_image_place_id_place'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_place_image'))
    )
    op.create_index(op.f('ix_place_image_record_modified'), 'place_image', ['record_modified'], unique=False)
    op.create_table('secret_extras',
    sa.Column('record_created', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('record_modified', sa.DateTime(), server_default=sa.text('statement_timestamp()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('food_suggestion', sa.Text(), nullable=True),
    sa.Column('time_suggestion', sa.Text(), nullable=True),
    sa.Column('company_suggestion', sa.Text(), nullable=True),
    sa.Column('music_suggestion', sa.Text(), nullable=True),
    sa.Column('extra_suggestion', sa.Text(), nullable=True),
    sa.Column('place_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['place.id'], name=op.f('fk_secret_extras_place_id_place'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_secret_extras'))
    )
    op.create_index(op.f('ix_secret_extras_record_modified'), 'secret_extras', ['record_modified'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_secret_extras_record_modified'), table_name='secret_extras')
    op.drop_table('secret_extras')
    op.drop_index(op.f('ix_place_image_record_modified'), table_name='place_image')
    op.drop_table('place_image')
    op.drop_index(op.f('ix_m2m_user_place_visited_record_modified'), table_name='m2m_user_place_visited')
    op.drop_table('m2m_user_place_visited')
    op.drop_index(op.f('ix_m2m_user_place_marked_record_modified'), table_name='m2m_user_place_marked')
    op.drop_table('m2m_user_place_marked')
    op.drop_index(op.f('ix_m2m_user_place_favourite_record_modified'), table_name='m2m_user_place_favourite')
    op.drop_table('m2m_user_place_favourite')
    op.drop_index(op.f('ix_m2m_user_opened_secret_place_record_modified'), table_name='m2m_user_opened_secret_place')
    op.drop_table('m2m_user_opened_secret_place')
    op.drop_index(op.f('ix_user_image_record_modified'), table_name='user_image')
    op.drop_table('user_image')
    op.drop_index(op.f('ix_place_record_modified'), table_name='place')
    op.drop_index(op.f('ix_place_category_id'), table_name='place')
    op.drop_table('place')
    op.drop_index(op.f('ix_m2m_user_user_following_user_record_modified'), table_name='m2m_user_user_following_user')
    op.drop_table('m2m_user_user_following_user')
    op.drop_index(op.f('ix_category_image_record_modified'), table_name='category_image')
    op.drop_table('category_image')
    op.drop_index(op.f('ix_user_record_modified'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_category_record_modified'), table_name='category')
    op.drop_table('category')
    op.drop_index(op.f('ix_actions_economy_record_modified'), table_name='actions_economy')
    op.drop_table('actions_economy')
    # ### end Alembic commands ###
